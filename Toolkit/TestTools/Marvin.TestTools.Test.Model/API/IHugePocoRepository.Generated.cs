//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the Marvin template for generating Repositories and a Unit of Work for Entity Framework.
// If you have any questions or suggestions for improvement regarding this code, contact Thomas Fuchs. I allways need feedback to improve.
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. So even when you think you can do better,
// don't touch it.
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Marvin.Model;


namespace Marvin.TestTools.Test.Model
{
    /// <summary>
    /// The public API of the HugePoco repository.
    /// </summary>
    public partial interface IHugePocoRepository : IRepository<HugePoco>
    {
		/// <summary>
        /// Get all HugePocos from the database
        /// </summary>
		/// <returns>A collection of entities. The result may be empty but not null.</returns>
        ICollection<HugePoco> GetAll();
        /// <summary>
        /// Get first HugePoco that matches the given parameter 
        /// or null if no match was found.
        /// </summary>
        /// <param name="float1">Value the entity has to match</param>
        /// <returns>First matching HugePoco</returns>
        HugePoco GetByFloat1(double float1);
        /// <summary>
        /// Creates instance with all not nullable properties prefilled
        /// </summary>
        HugePoco Create(double float1, int number1, double float2, int number2, double float3, int number3, double float4, int number4, double float5, int number5); 
        /// <summary>
        /// This method returns the first matching HugePoco for given parameters
        /// </summary>
        /// <param name="float2">Value for Float2 the HugePoco has to match</param>
        /// <param name="name2">Value for Name2 the HugePoco has to match</param>
        /// <param name="number2">Value for Number2 the HugePoco has to match</param>
        HugePoco GetGroup2(double float2, string name2, int number2);

        /// <summary>
        /// This method returns all matching HugePocos for given parameters
        /// </summary>
        /// <param name="float3">Value for Float3 the HugePocos have to match</param>
        /// <param name="name3">Value for Name3 the HugePocos have to match</param>
        /// <param name="number3">Value for Number3 the HugePocos have to match</param>
        IEnumerable<HugePoco> GetAllGroup3(double float3, string name3, int number3);

    }
}
