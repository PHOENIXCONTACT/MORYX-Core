//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Marvin.TestTools.SystemTest.Maintenance {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DependencyEvaluation", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DependencyEvaluation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDependenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDependendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RootModulesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDependencies {
            get {
                return this.MaxDependenciesField;
            }
            set {
                if ((this.MaxDependenciesField.Equals(value) != true)) {
                    this.MaxDependenciesField = value;
                    this.RaisePropertyChanged("MaxDependencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDependends {
            get {
                return this.MaxDependendsField;
            }
            set {
                if ((this.MaxDependendsField.Equals(value) != true)) {
                    this.MaxDependendsField = value;
                    this.RaisePropertyChanged("MaxDependends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDepth {
            get {
                return this.MaxDepthField;
            }
            set {
                if ((this.MaxDepthField.Equals(value) != true)) {
                    this.MaxDepthField = value;
                    this.RaisePropertyChanged("MaxDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RootModules {
            get {
                return this.RootModulesField;
            }
            set {
                if ((this.RootModulesField.Equals(value) != true)) {
                    this.RootModulesField = value;
                    this.RaisePropertyChanged("RootModules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerModuleModel", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ServerModuleModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.AssemblyModel AssemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[] DependenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.Runtime.Modules.FailureBehaviour FailureBehaviourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.Runtime.Modules.ServerModuleState HealthStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.NotificationModel[] NotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.Runtime.Modules.ModuleStartBehaviour StartBehaviourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.AssemblyModel Assembly {
            get {
                return this.AssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyField, value) != true)) {
                    this.AssemblyField = value;
                    this.RaisePropertyChanged("Assembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[] Dependencies {
            get {
                return this.DependenciesField;
            }
            set {
                if ((object.ReferenceEquals(this.DependenciesField, value) != true)) {
                    this.DependenciesField = value;
                    this.RaisePropertyChanged("Dependencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.Runtime.Modules.FailureBehaviour FailureBehaviour {
            get {
                return this.FailureBehaviourField;
            }
            set {
                if ((this.FailureBehaviourField.Equals(value) != true)) {
                    this.FailureBehaviourField = value;
                    this.RaisePropertyChanged("FailureBehaviour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.Runtime.Modules.ServerModuleState HealthState {
            get {
                return this.HealthStateField;
            }
            set {
                if ((this.HealthStateField.Equals(value) != true)) {
                    this.HealthStateField = value;
                    this.RaisePropertyChanged("HealthState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.NotificationModel[] Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.Runtime.Modules.ModuleStartBehaviour StartBehaviour {
            get {
                return this.StartBehaviourField;
            }
            set {
                if ((this.StartBehaviourField.Equals(value) != true)) {
                    this.StartBehaviourField = value;
                    this.RaisePropertyChanged("StartBehaviour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssemblyModel", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class AssemblyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BundleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bundle {
            get {
                return this.BundleField;
            }
            set {
                if ((object.ReferenceEquals(this.BundleField, value) != true)) {
                    this.BundleField = value;
                    this.RaisePropertyChanged("Bundle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationModel", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class NotificationModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.SerializableException ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImportantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.Modules.NotificationType NotificationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.SerializableException Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Important {
            get {
                return this.ImportantField;
            }
            set {
                if ((this.ImportantField.Equals(value) != true)) {
                    this.ImportantField = value;
                    this.RaisePropertyChanged("Important");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.Modules.NotificationType NotificationType {
            get {
                return this.NotificationTypeField;
            }
            set {
                if ((this.NotificationTypeField.Equals(value) != true)) {
                    this.NotificationTypeField = value;
                    this.RaisePropertyChanged("NotificationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SerializableException", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class SerializableException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.SerializableException InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionTypeName {
            get {
                return this.ExceptionTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeNameField, value) != true)) {
                    this.ExceptionTypeNameField = value;
                    this.RaisePropertyChanged("ExceptionTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.SerializableException InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Config", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.Serialization.Entry RootField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.Serialization.Entry Root {
            get {
                return this.RootField;
            }
            set {
                if ((object.ReferenceEquals(this.RootField, value) != true)) {
                    this.RootField = value;
                    this.RaisePropertyChanged("Root");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveConfigRequest", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    [System.SerializableAttribute()]
    public partial class SaveConfigRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.Config ConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Marvin.TestTools.SystemTest.Maintenance.ConfigUpdateMode UpdateModeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.Config Config {
            get {
                return this.ConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigField, value) != true)) {
                    this.ConfigField = value;
                    this.RaisePropertyChanged("Config");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Marvin.TestTools.SystemTest.Maintenance.ConfigUpdateMode UpdateMode {
            get {
                return this.UpdateModeField;
            }
            set {
                if ((this.UpdateModeField.Equals(value) != true)) {
                    this.UpdateModeField = value;
                    this.RaisePropertyChanged("UpdateMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigUpdateMode", Namespace="http://schemas.datacontract.org/2004/07/Marvin.Runtime.Maintenance.Plugins.Module" +
        "s")]
    public enum ConfigUpdateMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlySave = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveAndReincarnate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateLiveAndSave = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Maintenance.IModuleMaintenance")]
    public interface IModuleMaintenance {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetDependencyEvaluation", ReplyAction="http://tempuri.org/IModuleMaintenance/GetDependencyEvaluationResponse")]
        Marvin.TestTools.SystemTest.Maintenance.DependencyEvaluation GetDependencyEvaluation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetDependencyEvaluation", ReplyAction="http://tempuri.org/IModuleMaintenance/GetDependencyEvaluationResponse")]
        System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.DependencyEvaluation> GetDependencyEvaluationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetAll", ReplyAction="http://tempuri.org/IModuleMaintenance/GetAllResponse")]
        Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetAll", ReplyAction="http://tempuri.org/IModuleMaintenance/GetAllResponse")]
        System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/HealthState", ReplyAction="http://tempuri.org/IModuleMaintenance/HealthStateResponse")]
        Marvin.Runtime.Modules.ServerModuleState HealthState(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/HealthState", ReplyAction="http://tempuri.org/IModuleMaintenance/HealthStateResponse")]
        System.Threading.Tasks.Task<Marvin.Runtime.Modules.ServerModuleState> HealthStateAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Notifications", ReplyAction="http://tempuri.org/IModuleMaintenance/NotificationsResponse")]
        Marvin.TestTools.SystemTest.Maintenance.NotificationModel[] Notifications(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Notifications", ReplyAction="http://tempuri.org/IModuleMaintenance/NotificationsResponse")]
        System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.NotificationModel[]> NotificationsAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Start", ReplyAction="http://tempuri.org/IModuleMaintenance/StartResponse")]
        void Start(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Start", ReplyAction="http://tempuri.org/IModuleMaintenance/StartResponse")]
        System.Threading.Tasks.Task StartAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Stop", ReplyAction="http://tempuri.org/IModuleMaintenance/StopResponse")]
        void Stop(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Stop", ReplyAction="http://tempuri.org/IModuleMaintenance/StopResponse")]
        System.Threading.Tasks.Task StopAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Reincarnate", ReplyAction="http://tempuri.org/IModuleMaintenance/ReincarnateResponse")]
        void Reincarnate(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Reincarnate", ReplyAction="http://tempuri.org/IModuleMaintenance/ReincarnateResponse")]
        System.Threading.Tasks.Task ReincarnateAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Update", ReplyAction="http://tempuri.org/IModuleMaintenance/UpdateResponse")]
        void Update(string moduleName, Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/Update", ReplyAction="http://tempuri.org/IModuleMaintenance/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(string moduleName, Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/ConfirmWarning", ReplyAction="http://tempuri.org/IModuleMaintenance/ConfirmWarningResponse")]
        void ConfirmWarning(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/ConfirmWarning", ReplyAction="http://tempuri.org/IModuleMaintenance/ConfirmWarningResponse")]
        System.Threading.Tasks.Task ConfirmWarningAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetConfig", ReplyAction="http://tempuri.org/IModuleMaintenance/GetConfigResponse")]
        Marvin.TestTools.SystemTest.Maintenance.Config GetConfig(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetConfig", ReplyAction="http://tempuri.org/IModuleMaintenance/GetConfigResponse")]
        System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.Config> GetConfigAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/SetConfig", ReplyAction="http://tempuri.org/IModuleMaintenance/SetConfigResponse")]
        void SetConfig(string moduleName, Marvin.TestTools.SystemTest.Maintenance.SaveConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/SetConfig", ReplyAction="http://tempuri.org/IModuleMaintenance/SetConfigResponse")]
        System.Threading.Tasks.Task SetConfigAsync(string moduleName, Marvin.TestTools.SystemTest.Maintenance.SaveConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetMethods", ReplyAction="http://tempuri.org/IModuleMaintenance/GetMethodsResponse")]
        Marvin.Serialization.MethodEntry[] GetMethods(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/GetMethods", ReplyAction="http://tempuri.org/IModuleMaintenance/GetMethodsResponse")]
        System.Threading.Tasks.Task<Marvin.Serialization.MethodEntry[]> GetMethodsAsync(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/InvokeMethod", ReplyAction="http://tempuri.org/IModuleMaintenance/InvokeMethodResponse")]
        Marvin.Serialization.Entry InvokeMethod(string moduleName, Marvin.Serialization.MethodEntry method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModuleMaintenance/InvokeMethod", ReplyAction="http://tempuri.org/IModuleMaintenance/InvokeMethodResponse")]
        System.Threading.Tasks.Task<Marvin.Serialization.Entry> InvokeMethodAsync(string moduleName, Marvin.Serialization.MethodEntry method);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModuleMaintenanceChannel : Marvin.TestTools.SystemTest.Maintenance.IModuleMaintenance, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModuleMaintenanceClient : System.ServiceModel.ClientBase<Marvin.TestTools.SystemTest.Maintenance.IModuleMaintenance>, Marvin.TestTools.SystemTest.Maintenance.IModuleMaintenance {
        
        public ModuleMaintenanceClient() {
        }
        
        public ModuleMaintenanceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModuleMaintenanceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModuleMaintenanceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModuleMaintenanceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Marvin.TestTools.SystemTest.Maintenance.DependencyEvaluation GetDependencyEvaluation() {
            return base.Channel.GetDependencyEvaluation();
        }
        
        public System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.DependencyEvaluation> GetDependencyEvaluationAsync() {
            return base.Channel.GetDependencyEvaluationAsync();
        }
        
        public Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Marvin.Runtime.Modules.ServerModuleState HealthState(string moduleName) {
            return base.Channel.HealthState(moduleName);
        }
        
        public System.Threading.Tasks.Task<Marvin.Runtime.Modules.ServerModuleState> HealthStateAsync(string moduleName) {
            return base.Channel.HealthStateAsync(moduleName);
        }
        
        public Marvin.TestTools.SystemTest.Maintenance.NotificationModel[] Notifications(string moduleName) {
            return base.Channel.Notifications(moduleName);
        }
        
        public System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.NotificationModel[]> NotificationsAsync(string moduleName) {
            return base.Channel.NotificationsAsync(moduleName);
        }
        
        public void Start(string moduleName) {
            base.Channel.Start(moduleName);
        }
        
        public System.Threading.Tasks.Task StartAsync(string moduleName) {
            return base.Channel.StartAsync(moduleName);
        }
        
        public void Stop(string moduleName) {
            base.Channel.Stop(moduleName);
        }
        
        public System.Threading.Tasks.Task StopAsync(string moduleName) {
            return base.Channel.StopAsync(moduleName);
        }
        
        public void Reincarnate(string moduleName) {
            base.Channel.Reincarnate(moduleName);
        }
        
        public System.Threading.Tasks.Task ReincarnateAsync(string moduleName) {
            return base.Channel.ReincarnateAsync(moduleName);
        }
        
        public void Update(string moduleName, Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel module) {
            base.Channel.Update(moduleName, module);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(string moduleName, Marvin.TestTools.SystemTest.Maintenance.ServerModuleModel module) {
            return base.Channel.UpdateAsync(moduleName, module);
        }
        
        public void ConfirmWarning(string moduleName) {
            base.Channel.ConfirmWarning(moduleName);
        }
        
        public System.Threading.Tasks.Task ConfirmWarningAsync(string moduleName) {
            return base.Channel.ConfirmWarningAsync(moduleName);
        }
        
        public Marvin.TestTools.SystemTest.Maintenance.Config GetConfig(string moduleName) {
            return base.Channel.GetConfig(moduleName);
        }
        
        public System.Threading.Tasks.Task<Marvin.TestTools.SystemTest.Maintenance.Config> GetConfigAsync(string moduleName) {
            return base.Channel.GetConfigAsync(moduleName);
        }
        
        public void SetConfig(string moduleName, Marvin.TestTools.SystemTest.Maintenance.SaveConfigRequest request) {
            base.Channel.SetConfig(moduleName, request);
        }
        
        public System.Threading.Tasks.Task SetConfigAsync(string moduleName, Marvin.TestTools.SystemTest.Maintenance.SaveConfigRequest request) {
            return base.Channel.SetConfigAsync(moduleName, request);
        }
        
        public Marvin.Serialization.MethodEntry[] GetMethods(string moduleName) {
            return base.Channel.GetMethods(moduleName);
        }
        
        public System.Threading.Tasks.Task<Marvin.Serialization.MethodEntry[]> GetMethodsAsync(string moduleName) {
            return base.Channel.GetMethodsAsync(moduleName);
        }
        
        public Marvin.Serialization.Entry InvokeMethod(string moduleName, Marvin.Serialization.MethodEntry method) {
            return base.Channel.InvokeMethod(moduleName, method);
        }
        
        public System.Threading.Tasks.Task<Marvin.Serialization.Entry> InvokeMethodAsync(string moduleName, Marvin.Serialization.MethodEntry method) {
            return base.Channel.InvokeMethodAsync(moduleName, method);
        }
    }
}
